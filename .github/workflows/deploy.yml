on:
  push:
    branches: [ main ]

name: 🚧 Run tests, build, push to Docker Hub & deploy to VPS 🚀
jobs:
  push_to_registry_and_deploy:
    name: 🚀 Push Docker image to Docker Hub and deploy to Droplet
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🏗 Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: floperrier/challenge-delivery-front-admin

      - name: 🚧 Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NEXT_PUBLIC_API_URL=${{ secrets.PUBLIC_API_URL }}

      - name: Deploy to Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_DROPLET_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull floperrier/challenge-delivery-front-admin:feat-deployment
            if [ "$(docker ps -a | grep challenge-delivery-front-admin-container)" ]; then
              docker stop challenge-delivery-front-admin-container
              docker rm challenge-delivery-front-admin-container
            fi
            docker run -d --network challenge-delivery --name challenge-delivery-front-admin-container -p 3000:3001 \
              -e NEXT_PUBLIC_API_URL=${{ secrets.PUBLIC_API_URL }} \
              floperrier/challenge-delivery-front-admin:feat-deployment